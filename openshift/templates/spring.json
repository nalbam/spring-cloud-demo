{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "annotations": {
      "iconClass": "icon-rh-openjdk",
      "tags": "java",
      "version": "1.0.0",
      "openshift.io/display-name": "OpenJDK 8",
      "openshift.io/provider-display-name": "Red Hat, Inc.",
      "description": "An example Java application using OpenJDK 8.",
      "template.openshift.io/long-description": "This template defines resources needed to develop Red Hat OpenJDK Java 8 based application.",
      "template.openshift.io/documentation-url": "https://access.redhat.com/documentation/en/",
      "template.openshift.io/support-url": "https://access.redhat.com/"
    },
    "name": "service-demo"
  },
  "labels": {
    "template": "service-demo",
    "xpaas": "1.0.0"
  },
  "message": "A new java application has been created in your project.",
  "parameters": [
    {
      "description": "Identifies the resources created for this application.",
      "displayName": "Name",
      "name": "APPLICATION_NAME",
      "value": "service-demo",
      "required": true
    },
    {
      "description": "Public hostname for the route. If not specified, a hostname is generated.",
      "displayName": "Hostname",
      "name": "HOSTNAME",
      "value": "",
      "required": false
    },
    {
      "description": "Git source URI for application",
      "displayName": "Git Repository URL",
      "name": "SOURCE_REPOSITORY_URL",
      "value": "https://github.com/nalbam/spring-service-demo",
      "required": true
    },
    {
      "description": "Optional branch, tag, or commit.",
      "displayName": "Git Reference",
      "name": "SOURCE_REPOSITORY_REF",
      "value": "master",
      "required": false
    },
    {
      "description": "Path within Git project to build; empty for root project directory.",
      "displayName": "Context Directory",
      "name": "CONTEXT_DIR",
      "value": "",
      "required": false
    },
    {
      "description": "GitHub trigger secret",
      "displayName": "Github Webhook Secret",
      "name": "GITHUB_WEBHOOK_SECRET",
      "from": "[a-zA-Z0-9]{8}",
      "generate": "expression",
      "required": true
    },
    {
      "description": "Generic build trigger secret",
      "displayName": "Generic Webhook Secret",
      "name": "GENERIC_WEBHOOK_SECRET",
      "from": "[a-zA-Z0-9]{8}",
      "generate": "expression",
      "required": true
    },
    {
      "description": "Namespace in which the ImageStreams for Red Hat Middleware images are installed. These ImageStreams are normally installed in the openshift namespace. You should only need to modify this if you've installed the ImageStreams in a different namespace/project.",
      "displayName": "ImageStream Namespace",
      "name": "IMAGE_STREAM_NAMESPACE",
      "value": "openshift",
      "required": true
    },
    {
      "name": "MEMORY_LIMIT",
      "displayName": "Memory Limit",
      "required": true,
      "description": "Maximum amount of memory the container can use.",
      "value": "512Mi"
    },
    {
      "name": "PROFILE",
      "displayName": "Application Profile",
      "required": true,
      "description": "Spring Boot Application Profile.",
      "value": "dev"
    },
    {
      "name": "CONFIG_SERVER_HOST",
      "displayName": "Cloud Config Host",
      "required": true,
      "description": "Spring Boot Cloud Config Server Host.",
      "value": "config-server"
    },
    {
      "name": "CONFIG_SERVER_PORT",
      "displayName": "Cloud Config Port",
      "required": true,
      "description": "Spring Boot Cloud Config Server Port.",
      "value": "8888"
    }
  ],
  "objects": [
    {
      "kind": "Service",
      "apiVersion": "v1",
      "spec": {
        "ports": [
          {
            "port": 8080,
            "targetPort": 8080
          }
        ],
        "selector": {
          "deploymentConfig": "${APPLICATION_NAME}"
        }
      },
      "metadata": {
        "name": "${APPLICATION_NAME}",
        "labels": {
          "application": "${APPLICATION_NAME}"
        },
        "annotations": {
          "description": "The application's http port."
        }
      }
    },
    {
      "kind": "Route",
      "apiVersion": "v1",
      "id": "${APPLICATION_NAME}-http",
      "metadata": {
        "name": "${APPLICATION_NAME}",
        "labels": {
          "application": "${APPLICATION_NAME}"
        },
        "annotations": {
          "description": "Route for application's http service."
        }
      },
      "spec": {
        "host": "${HOSTNAME}",
        "to": {
          "name": "${APPLICATION_NAME}"
        }
      }
    },
    {
      "kind": "ImageStream",
      "apiVersion": "v1",
      "metadata": {
        "name": "${APPLICATION_NAME}",
        "labels": {
          "application": "${APPLICATION_NAME}"
        }
      }
    },
    {
      "kind": "BuildConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${APPLICATION_NAME}",
        "labels": {
          "application": "${APPLICATION_NAME}"
        }
      },
      "spec": {
        "source": {
          "type": "Git",
          "git": {
            "uri": "${SOURCE_REPOSITORY_URL}",
            "ref": "${SOURCE_REPOSITORY_REF}"
          },
          "contextDir": "${CONTEXT_DIR}"
        },
        "strategy": {
          "type": "Source",
          "sourceStrategy": {
            "forcePull": true,
            "from": {
              "kind": "ImageStreamTag",
              "namespace": "${IMAGE_STREAM_NAMESPACE}",
              "name": "redhat-openjdk-18:1.3"
            }
          }
        },
        "output": {
          "to": {
            "kind": "ImageStreamTag",
            "name": "${APPLICATION_NAME}:latest"
          }
        },
        "triggers": [
          {
            "type": "GitHub",
            "github": {
              "secret": "${GITHUB_WEBHOOK_SECRET}"
            }
          },
          {
            "type": "Generic",
            "generic": {
              "secret": "${GENERIC_WEBHOOK_SECRET}"
            }
          },
          {
            "type": "ImageChange",
            "imageChange": {}
          },
          {
            "type": "ConfigChange"
          }
        ]
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${APPLICATION_NAME}",
        "labels": {
          "application": "${APPLICATION_NAME}"
        }
      },
      "spec": {
        "strategy": {
          "type": "Recreate"
        },
        "triggers": [
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "${APPLICATION_NAME}"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "name": "${APPLICATION_NAME}:latest"
              }
            }
          },
          {
            "type": "ConfigChange"
          }
        ],
        "replicas": 1,
        "selector": {
          "deploymentConfig": "${APPLICATION_NAME}"
        },
        "template": {
          "metadata": {
            "name": "${APPLICATION_NAME}",
            "labels": {
              "deploymentConfig": "${APPLICATION_NAME}",
              "application": "${APPLICATION_NAME}"
            }
          },
          "spec": {
            "terminationGracePeriodSeconds": 75,
            "containers": [
              {
                "name": "${APPLICATION_NAME}",
                "image": "${APPLICATION_NAME}",
                "imagePullPolicy": "Always",
                "env": [
                  {
                    "name": "PROFILE",
                    "value": "${PROFILE}"
                  },
                  {
                    "name": "CONFIG_SERVER_HOST",
                    "value": "${CONFIG_SERVER_HOST}"
                  },
                  {
                    "name": "CONFIG_SERVER_PORT",
                    "value": "${CONFIG_SERVER_PORT}"
                  }
                ],
                "ports": [
                  {
                    "name": "jolokia",
                    "containerPort": 8778,
                    "protocol": "TCP"
                  },
                  {
                    "name": "http",
                    "containerPort": 8080,
                    "protocol": "TCP"
                  },
                  {
                    "name": "https",
                    "containerPort": 8443,
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "timeoutSeconds": 3,
                  "initialDelaySeconds": 3,
                  "httpGet": {
                    "path": "/",
                    "port": 8080
                  }
                },
                "livenessProbe": {
                  "timeoutSeconds": 3,
                  "initialDelaySeconds": 30,
                  "httpGet": {
                    "path": "/",
                    "port": 8080
                  }
                },
                "resources": {
                  "limits": {
                    "memory": "${MEMORY_LIMIT}"
                  }
                }
              }
            ]
          }
        }
      }
    }
  ]
}
